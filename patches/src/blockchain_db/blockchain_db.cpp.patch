--- monero/src/blockchain_db/blockchain_db.cpp	2020-08-04 19:07:58.000000000 +0200
+++ monero-new/src/blockchain_db/blockchain_db.cpp	2020-08-03 21:31:15.000000000 +0200
@@ -151,6 +151,14 @@ void BlockchainDB::add_transaction(const
     {
       add_spent_key(boost::get<txin_to_key>(tx_input).k_image);
     }
+    else if (tx_input.type() == typeid(txin_onshore))
+    {
+      add_spent_key(boost::get<txin_onshore>(tx_input).k_image);
+    }
+    else if (tx_input.type() == typeid(txin_offshore))
+    {
+      add_spent_key(boost::get<txin_offshore>(tx_input).k_image);
+    }
     else if (tx_input.type() == typeid(txin_gen))
     {
       /* nothing to do here */
@@ -165,6 +173,14 @@ void BlockchainDB::add_transaction(const
         {
           remove_spent_key(boost::get<txin_to_key>(tx_input).k_image);
         }
+        else if (tx_input.type() == typeid(txin_onshore))
+	{
+	  remove_spent_key(boost::get<txin_onshore>(tx_input).k_image);
+	}
+	else if (tx_input.type() == typeid(txin_offshore))
+	{
+	  remove_spent_key(boost::get<txin_offshore>(tx_input).k_image);
+	}
       }
       return;
     }
@@ -180,7 +196,7 @@ void BlockchainDB::add_transaction(const
   {
     // miner v2 txes have their coinbase output in one single out to save space,
     // and we store them as rct outputs with an identity mask
-    if (miner_tx && tx.version == 2)
+    if (miner_tx && tx.version >= 2)
     {
       cryptonote::tx_out vout = tx.vout[i];
       rct::key commitment = rct::zeroCommit(vout.amount);
@@ -191,7 +207,7 @@ void BlockchainDB::add_transaction(const
     else
     {
       amount_output_indices[i] = add_output(tx_hash, tx.vout[i], i, tx.unlock_time,
-        tx.version > 1 ? &tx.rct_signatures.outPk[i].mask : NULL);
+					    tx.version > 1 ? ((tx.vout[i].target.type() == typeid(txout_offshore)) ? &tx.rct_signatures.outPk_usd[i].mask : &tx.rct_signatures.outPk[i].mask) : NULL);
     }
   }
   add_tx_amount_output_indices(tx_id, amount_output_indices);
@@ -224,7 +240,7 @@ uint64_t BlockchainDB::add_block( const 
 
   uint64_t num_rct_outs = 0;
   add_transaction(blk_hash, std::make_pair(blk.miner_tx, tx_to_blob(blk.miner_tx)));
-  if (blk.miner_tx.version == 2)
+  if (blk.miner_tx.version >= 2)
     num_rct_outs += blk.miner_tx.vout.size();
   int tx_i = 0;
   crypto::hash tx_hash = crypto::null_hash;
@@ -292,6 +308,14 @@ void BlockchainDB::remove_transaction(co
     {
       remove_spent_key(boost::get<txin_to_key>(tx_input).k_image);
     }
+    else if (tx_input.type() == typeid(txin_onshore))
+    {
+      remove_spent_key(boost::get<txin_onshore>(tx_input).k_image);
+    }
+    else if (tx_input.type() == typeid(txin_offshore))
+    {
+      remove_spent_key(boost::get<txin_offshore>(tx_input).k_image);
+    }
   }
 
   // need tx as tx.vout has the tx outputs, and the output amounts are needed
