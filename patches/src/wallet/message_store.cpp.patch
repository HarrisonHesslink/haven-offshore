--- monero/src/wallet/message_store.cpp	2020-08-05 16:35:28.000000000 +0200
+++ monero-new/src/wallet/message_store.cpp	2020-08-05 16:32:48.000000000 +0200
@@ -48,7 +48,7 @@
 namespace mms
 {
 
-message_store::message_store()
+message_store::message_store(std::unique_ptr<epee::net_utils::http::abstract_http_client> http_client) : m_transporter(std::move(http_client))
 {
   m_active = false;
   m_auto_send = false;
@@ -705,7 +705,7 @@ void message_store::write_to_file(const 
   std::string buf = oss.str();
 
   crypto::chacha_key key;
-  crypto::generate_chacha_key(&state.view_secret_key, sizeof(crypto::secret_key), key, 1);
+  crypto::generate_chacha_key(&state.view_secret_key, sizeof(crypto::secret_key), key, HAVEN_CHACHA_ROUNDS);
 
   file_data write_file_data = boost::value_initialized<file_data>();
   write_file_data.magic_string = "MMS";
@@ -755,7 +755,7 @@ void message_store::read_from_file(const
   }
 
   crypto::chacha_key key;
-  crypto::generate_chacha_key(&state.view_secret_key, sizeof(crypto::secret_key), key, 1);
+  crypto::generate_chacha_key(&state.view_secret_key, sizeof(crypto::secret_key), key, HAVEN_CHACHA_ROUNDS);
   std::string decrypted_data;
   decrypted_data.resize(read_file_data.encrypted_data.size());
   crypto::chacha20(read_file_data.encrypted_data.data(), read_file_data.encrypted_data.size(), key, read_file_data.iv, &decrypted_data[0]);
@@ -1181,7 +1181,7 @@ void message_store::encrypt(crypto::publ
   THROW_WALLET_EXCEPTION_IF(!success, tools::error::wallet_internal_error, "Failed to generate key derivation for message encryption");
 
   crypto::chacha_key chacha_key;
-  crypto::generate_chacha_key(&derivation, sizeof(derivation), chacha_key, 1);
+  crypto::generate_chacha_key(&derivation, sizeof(derivation), chacha_key, HAVEN_CHACHA_ROUNDS);
   iv = crypto::rand<crypto::chacha_iv>();
   ciphertext.resize(plaintext.size());
   crypto::chacha20(plaintext.data(), plaintext.size(), chacha_key, iv, &ciphertext[0]);
@@ -1194,7 +1194,7 @@ void message_store::decrypt(const std::s
   bool success = crypto::generate_key_derivation(encryption_public_key, view_secret_key, derivation);
   THROW_WALLET_EXCEPTION_IF(!success, tools::error::wallet_internal_error, "Failed to generate key derivation for message decryption");
   crypto::chacha_key chacha_key;
-  crypto::generate_chacha_key(&derivation, sizeof(derivation), chacha_key, 1);
+  crypto::generate_chacha_key(&derivation, sizeof(derivation), chacha_key, HAVEN_CHACHA_ROUNDS);
   plaintext.resize(ciphertext.size());
   crypto::chacha20(ciphertext.data(), ciphertext.size(), chacha_key, iv, &plaintext[0]);
 }
